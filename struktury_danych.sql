-- Generated by Oracle SQL Developer Data Modeler 19.2.0.182.1216
--   at:        2020-01-17 13:33:43 CET
--   site:      Oracle Database 11g
--   type:      Oracle Database 11g



CREATE user bd2a42_app identified by account unlock 
;

CREATE TABLE osoby (
    id_osoby                     NUMBER(5) NOT NULL,
    nazwisko                     VARCHAR2(40 CHAR) NOT NULL,
    imie                         VARCHAR2(40 CHAR) NOT NULL,
    data_urodzenia               DATE NOT NULL,
    nr_albumu_studenta           VARCHAR2(10 CHAR),
    tytul_naukowy_opiekuna       VARCHAR2(60 CHAR),
    id_zakladu_zatrudniajacego   NUMBER(4),
    czy_student                  VARCHAR2(1 CHAR) NOT NULL,
    czy_pracownik                VARCHAR2(1 CHAR) NOT NULL
)
LOGGING;

COMMENT ON TABLE osoby IS
    'Przechowuje informacje o opiekunach naukowych, ktorzy moga dodawac tematy prac dyplomowych oraz o studentach, ktorzy moga skladac preferencje tematow.'
    ;

COMMENT ON COLUMN osoby.id_osoby IS
    'Sztuczny unikalny identyfikator.';

COMMENT ON COLUMN osoby.nazwisko IS
    'Powinno byc wpisane wielkimi literami.';

COMMENT ON COLUMN osoby.imie IS
    'Powinno byc wpisane wielkimi literami.';

COMMENT ON COLUMN osoby.nr_albumu_studenta IS
    'Unikalny ci¹g cyfr przypisany kazdemu studentowi. Dla opiekunow naukowych wartosc NULL.';

COMMENT ON COLUMN osoby.tytul_naukowy_opiekuna IS
    'Moze byc przypisany tylko opiekunom naukowym, dla studentow wartosc NULL.';

COMMENT ON COLUMN osoby.id_zakladu_zatrudniajacego IS
    'Okresla zaklad, do ktorego przynalezy dany opiekun naukowy, jest mozliwosc zmiany zakladu. Dla studentow wartosc NULL.';

COMMENT ON COLUMN osoby.czy_student IS
    'Wartosc "T", gdy osoba jest studentem, w przeciwnym przypadku wartoœæ "N".';

COMMENT ON COLUMN osoby.czy_pracownik IS
    'Wartosc "T", gdy osoba jest pracownikiem, w przeciwnym przypadku wartoœæ "N".';

CREATE INDEX zaklady_zatrudniajace_idx ON
    osoby (
        id_zakladu_zatrudniajacego
    ASC )
        LOGGING;

GRANT DELETE, INSERT, SELECT, UPDATE ON osoby TO bd2a42_app;

ALTER TABLE osoby
    ADD CONSTRAINT imie_wielkie_litery CHECK ( imie = upper(imie) );

ALTER TABLE osoby
    ADD CONSTRAINT nazwisko_wielkie_litery CHECK ( nazwisko = upper(nazwisko) );

ALTER TABLE osoby
    ADD CONSTRAINT pracownik_pola CHECK ( ( czy_pracownik = 'T'
                                            AND id_zakladu_zatrudniajacego IS NOT NULL )
                                          OR ( czy_pracownik = 'N'
                                               AND id_zakladu_zatrudniajacego IS NULL
                                               AND tytul_naukowy_opiekuna IS NULL ) );

ALTER TABLE osoby
    ADD CONSTRAINT student_pola CHECK ( ( czy_student = 'T'
                                          AND nr_albumu_studenta IS NOT NULL )
                                        OR ( czy_student = 'N'
                                             AND nr_albumu_studenta IS NULL ) );

ALTER TABLE osoby
    ADD CONSTRAINT wartosci_czy_pracownik CHECK ( czy_pracownik IN (
        'T',
        'N'
    ) );

ALTER TABLE osoby
    ADD CONSTRAINT wartosci_czy_student CHECK ( czy_student IN (
        'T',
        'N'
    ) );

ALTER TABLE osoby ADD CONSTRAINT dodatnie_id_osoby CHECK ( id_osoby > 0 );
    
ALTER TABLE osoby
    ADD CONSTRAINT student_lub_pracownik CHECK ( czy_student = 'T' or czy_pracownik = 'T');

ALTER TABLE osoby ADD CONSTRAINT osoby_pk PRIMARY KEY ( id_osoby );

ALTER TABLE osoby ADD CONSTRAINT nr_albumu_studenta_un UNIQUE ( nr_albumu_studenta );

CREATE TABLE preferencje (
    nr_wybranego_tematu   NUMBER(5) NOT NULL,
    waga                  NUMBER(1) NOT NULL,
    id_studenta           NUMBER(5) NOT NULL
)
LOGGING;

COMMENT ON TABLE preferencje IS
    'Przechowuje preferencje tematow prac zlozone przez studentow.';

COMMENT ON COLUMN preferencje.nr_wybranego_tematu IS
    'Po zlozeniu preferencji jest mozliwosc zmiany tematu ktorego ona dotyczy.';

COMMENT ON COLUMN preferencje.waga IS
    'Liczba ze zbioru {1, 2, 3}, gdzie 1 oznacza temat najbardziej, a 3 najmniej preferowany.';

COMMENT ON COLUMN preferencje.id_studenta IS
    'Okresla ktory student zlozyl preferencje, po zlozeniu preferencji nie ma mozliwosci zmiany studenta przez ktorego wykonane zostalo to dzialanie.'
    ;

CREATE INDEX wybrane_tematy_idx ON
    preferencje (
        nr_wybranego_tematu
    ASC )
        LOGGING;

GRANT DELETE, INSERT, SELECT, UPDATE ON preferencje TO bd2a42_app;

ALTER TABLE preferencje
    ADD CONSTRAINT dopuszczalne_wartosci_wagi CHECK ( waga IN (
        1,
        2,
        3
    ) );

ALTER TABLE preferencje ADD CONSTRAINT preferencje_pk PRIMARY KEY ( id_studenta,
                                                                    waga );

CREATE TABLE tematy (
    nr_tematu     NUMBER(5) NOT NULL,
    temat         VARCHAR2(100 CHAR) NOT NULL,
    opis          VARCHAR2(200 CHAR),
    id_opiekuna   NUMBER(5) NOT NULL
)
LOGGING;

COMMENT ON TABLE tematy IS
    'Przechowuje informacje o tematach prac dyplomowych opublikowanych przez opiekunow naukowych.';

COMMENT ON COLUMN tematy.nr_tematu IS
    'Sztuczny unikalny identyfikator.';

COMMENT ON COLUMN tematy.temat IS
    'Powinien byc wpisany wielkimi literami.';

COMMENT ON COLUMN tematy.id_opiekuna IS
    'Okresla, ktory opiekun dodal temat; jesli opiekun doda temat, to nie mozna zmienic go na innego opiekuna (powodowaloby to niejasnosci przy wyborze preferencji).'
    ;

CREATE INDEX opiekunowie_idx ON
    tematy (
        id_opiekuna
    ASC )
        LOGGING;

GRANT DELETE, INSERT, SELECT, UPDATE ON tematy TO bd2a42_app;

ALTER TABLE tematy
    ADD CONSTRAINT temat_wielkie_litery CHECK ( temat = upper(temat) );

ALTER TABLE tematy ADD CONSTRAINT dodatni_nr_tematu CHECK ( nr_tematu > 0 );

ALTER TABLE tematy ADD CONSTRAINT tematy_pk PRIMARY KEY ( nr_tematu );

CREATE TABLE zaklady (
    id_zakladu   NUMBER(4) NOT NULL,
    nazwa        VARCHAR2(60 CHAR) NOT NULL,
    opis         VARCHAR2(200 CHAR)
)
LOGGING;

COMMENT ON TABLE zaklady IS
    'Przechowuje informacje o zakladach znajdujacych sie na danej uczelni/wydziale.';

COMMENT ON COLUMN zaklady.id_zakladu IS
    'Sztuczny unikalny identyfikator.';

COMMENT ON COLUMN zaklady.nazwa IS
    'Powinna byc wpisana wielkimi literami.';

GRANT DELETE, INSERT, SELECT, UPDATE ON zaklady TO bd2a42_app;

ALTER TABLE zaklady
    ADD CONSTRAINT nazwa_zakladu_wielkie_litery CHECK ( nazwa = upper(nazwa) );

ALTER TABLE zaklady ADD CONSTRAINT dodatnie_id_zakladu CHECK ( id_zakladu > 0 );

ALTER TABLE zaklady ADD CONSTRAINT zaklady_pk PRIMARY KEY ( id_zakladu );

ALTER TABLE osoby
    ADD CONSTRAINT osoby_zaklady_fk FOREIGN KEY ( id_zakladu_zatrudniajacego )
        REFERENCES zaklady ( id_zakladu )
    DEFERRABLE;

ALTER TABLE preferencje
    ADD CONSTRAINT preferencje_osoby_fk FOREIGN KEY ( id_studenta )
        REFERENCES osoby ( id_osoby )
            ON DELETE CASCADE
    DEFERRABLE;

ALTER TABLE preferencje
    ADD CONSTRAINT preferencje_tematy_fk FOREIGN KEY ( nr_wybranego_tematu )
        REFERENCES tematy ( nr_tematu )
    DEFERRABLE;

ALTER TABLE tematy
    ADD CONSTRAINT tematy_osoby_fk FOREIGN KEY ( id_opiekuna )
        REFERENCES osoby ( id_osoby )
    DEFERRABLE;

CREATE OR REPLACE TRIGGER fkntm_preferencje BEFORE
    UPDATE OF id_studenta ON preferencje FOR EACH ROW
    WHEN (new.id_studenta <> old.id_studenta)
BEGIN
    raise_application_error(-20225, 'Non Transferable FK constraint  on table Preferencje is violated');
END;
/

CREATE OR REPLACE TRIGGER fkntm_tematy BEFORE
    UPDATE OF id_opiekuna ON tematy FOR EACH ROW
    WHEN (new.id_opiekuna <> old.id_opiekuna)
BEGIN
    raise_application_error(-20225, 'Non Transferable FK constraint  on table Tematy is violated');
END;
/



-- Oracle SQL Developer Data Modeler Summary Report: 
-- 
-- CREATE TABLE                             4
-- CREATE INDEX                             3
-- ALTER TABLE                             18
-- CREATE VIEW                              0
-- ALTER VIEW                               0
-- CREATE PACKAGE                           0
-- CREATE PACKAGE BODY                      0
-- CREATE PROCEDURE                         0
-- CREATE FUNCTION                          0
-- CREATE TRIGGER                           2
-- ALTER TRIGGER                            0
-- CREATE COLLECTION TYPE                   0
-- CREATE STRUCTURED TYPE                   0
-- CREATE STRUCTURED TYPE BODY              0
-- CREATE CLUSTER                           0
-- CREATE CONTEXT                           0
-- CREATE DATABASE                          0
-- CREATE DIMENSION                         0
-- CREATE DIRECTORY                         0
-- CREATE DISK GROUP                        0
-- CREATE ROLE                              0
-- CREATE ROLLBACK SEGMENT                  0
-- CREATE SEQUENCE                          0
-- CREATE MATERIALIZED VIEW                 0
-- CREATE MATERIALIZED VIEW LOG             0
-- CREATE SYNONYM                           0
-- CREATE TABLESPACE                        0
-- CREATE USER                              1
-- 
-- DROP TABLESPACE                          0
-- DROP DATABASE                            0
-- 
-- REDACTION POLICY                         0
-- 
-- ORDS DROP SCHEMA                         0
-- ORDS ENABLE SCHEMA                       0
-- ORDS ENABLE OBJECT                       0
-- 
-- ERRORS                                   0
-- WARNINGS                                 0
